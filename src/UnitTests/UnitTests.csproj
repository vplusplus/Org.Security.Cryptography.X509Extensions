<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.1;net5.0;</TargetFrameworks>

    <IsPackable>false</IsPackable>
  </PropertyGroup>
  <PropertyGroup>
    <LangVersion>9.0</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="coverlet.msbuild" Version="2.8.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="FluentAssertions" Version="6.1.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.2.0" />
    <PackageReference Include="MSTest.TestAdapter" Version="2.0.0" />
    <PackageReference Include="MSTest.TestFramework" Version="2.0.0" />
    <PackageReference Include="coverlet.collector" Version="1.0.1" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.7.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Org.Security.Cryptography.X509Extensions\Org.Security.Cryptography.X509Extensions.csproj" />
    <ProjectReference Include="..\X509.EnduranceTest.Shared\X509.EnduranceTest.Shared.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="app.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="TestCertificates\hello.world.2048.net.cer">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="TestCertificates\hello.world.2048.net.pfx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!-- 
    <HACK>
      The entry point of .Net core Test project is in testhost.dll 
      App.config is expected as testhost.dll.config NOT as UniTests.exe|dll.config
      Copy the (ProjectName).dll.config to testhost.dll.config
      If below target is removed, entries in App.config will not take effect.
    </HACK>
     
    <Target Name="CopyAppConfig" AfterTargets="Build" DependsOnTargets="Build">
      <CreateItem Include="$(OutputPath)$(AssemblyName).dll.config">
        <Output TaskParameter="Include" ItemName="FilesToCopy" />
      </CreateItem>
      <Copy SourceFiles="@(FilesToCopy)" DestinationFiles="$(OutputPath)testhost.dll.config" />
    </Target>
    -->
  <Target Name="CopyCustomContent" AfterTargets="AfterBuild">
    <Copy SourceFiles="App.config" DestinationFiles="$(OutDir)\testhost.dll.config" />
  </Target>
</Project>